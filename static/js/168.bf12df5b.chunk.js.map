{"version":3,"file":"static/js/168.bf12df5b.chunk.js","mappings":"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","sources":["API/movie.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '260fc58ea6000c815fd7f586919a4c2b';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n  try {\n    const fetchUrl = `${BASE_URL}${TRENDING}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data.results;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchMovieDetails(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const fetchUrl = `${BASE_URL}${SEARCH}?api_key=${API_KEY}&query=${query}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nconst movieAPI = {\n  fetchTrending,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n  searchMovies,\n};\n\nexport default movieAPI;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"review\":\"Reviews_review__sHbuN\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\",\"empty\":\"Reviews_empty__gM9wW\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport movieAPI from 'API/movie';\nimport style from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [empty, setEmpty] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    movieAPI\n      .fetchReviews(movieId)\n      .then(result => {\n        if (result.results.length > 0) {\n          setReviews(result.results);\n        } else {\n          setEmpty(true);\n        }\n      })\n      .catch(error => toast.error(`${error.message}`))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <ul className={style.reviewsList}>\n      {loading && <Loader />}\n\n      {reviews &&\n        reviews.map(review => {\n          return (\n            <li className={style.review} key={review.id}>\n              <h3 className={style.author}> Author: {review.author}</h3>\n              <p className={style.content}>{review.content}</p>\n            </li>\n          );\n        })}\n\n      {empty && (\n        <p className={style.empty}>We don't have any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","results","Promise","reject","Error","fetchMovieDetails","id","fetchCast","fetchReviews","searchMovies","query","movieAPI","movieId","useParams","useState","reviews","setReviews","empty","setEmpty","loading","setLoading","useEffect","then","result","length","catch","error","toast","message","finally","className","style","Loader","map","review","author","content"],"sourceRoot":""}