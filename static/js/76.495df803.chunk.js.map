{"version":3,"file":"static/js/76.495df803.chunk.js","mappings":"iLAEMA,EAAW,+BACXC,EAAU,mCACVC,EAAW,sBACXC,EAAgB,SAChBC,EAAO,WACPC,EAAU,WACVC,EAAS,gBAEAC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,sGAEUC,EAFV,UAEwBR,GAFxB,OAEmCE,EAFnC,oBAEuDD,GAFvD,SAG2BQ,EAAAA,EAAAA,IAAUD,GAHrC,YAGUE,EAHV,iDAMaA,EAASC,KAAKC,SAN3B,gCASWC,QAAQC,OAAO,IAAIC,MAAM,mCATpC,kJAeeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,yFAEUT,EAFV,UAEwBR,GAFxB,OAEmCG,EAFnC,YAEoDc,EAFpD,oBAEkEhB,GAFlE,SAG2BQ,EAAAA,EAAAA,IAAUD,GAHrC,YAGUE,EAHV,iDAMaA,EAASC,MANtB,gCASWE,QAAQC,OAAO,IAAIC,MAAM,mCATpC,kJAeeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBD,GAAzB,yFAEUT,EAFV,UAEwBR,GAFxB,OAEmCG,EAFnC,YAEoDc,GAFpD,OAEyDb,EAFzD,oBAEyEH,GAFzE,SAG2BQ,EAAAA,EAAAA,IAAUD,GAHrC,YAGUE,EAHV,iDAMaA,EAASC,MANtB,gCASWE,QAAQC,OAAO,IAAIC,MAAM,mCATpC,kJAeeI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BF,GAA5B,yFAEUT,EAFV,UAEwBR,GAFxB,OAEmCG,EAFnC,YAEoDc,GAFpD,OAEyDZ,EAFzD,oBAE4EJ,GAF5E,SAG2BQ,EAAAA,EAAAA,IAAUD,GAHrC,YAGUE,EAHV,iDAMaA,EAASC,MANtB,gCASWE,QAAQC,OAAO,IAAIC,MAAM,mCATpC,kJAeeK,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,yFAEUb,EAFV,UAEwBR,GAFxB,OAEmCM,EAFnC,oBAEqDL,EAFrD,kBAEsEoB,GAFtE,SAG2BZ,EAAAA,EAAAA,IAAUD,GAHrC,YAGUE,EAHV,iDAMaA,EAASC,MANtB,gCASWE,QAAQC,OAAO,IAAIC,MAAM,mCATpC,kJAeA,IAAMO,EAAW,CACff,cA9EF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6EbS,kBA7EF,SAeiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA+DbE,UA/DF,SAeyB,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiDbC,aAjDF,SAe4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAmCbC,aAnCF,SAe4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAuBf,K,oIC5FA,GAAgB,SAAW,uBAAuB,WAAa,yBAAyB,KAAO,mBAAmB,UAAY,wBAAwB,cAAgB,6B,SC8DtK,EAxDa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACXP,EAAAA,EAAAA,UACaC,GACVQ,MAAK,SAAAC,GAAM,OAAIL,EAAQK,EAAON,KAAnB,IACXO,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SAAzB,IACXC,SAAQ,WACPR,GAAW,EACZ,GACJ,GAAE,CAACN,KAGF,gBAAIe,UAAWC,EAAAA,SAAf,UACGb,GACCA,EAAKc,KAAI,SAAAC,GACP,OACE,gBAAIH,UAAWC,EAAAA,WAAf,UACGE,EAAMC,cACL,gBACEC,IAAG,UArBE,mCAqBF,OAAoBF,EAAMC,cAC7BE,IAAI,GACJC,MAAM,MACNP,UAAWC,EAAAA,SAGb,gBACEI,IAAI,iEACJC,IAAI,GACJC,MAAM,MACNP,UAAWC,EAAAA,SAGf,4BACE,cAAGD,UAAWC,EAAAA,KAAd,SAA2BE,EAAMK,QACjC,cAAGR,UAAWC,EAAAA,UAAd,wBACCE,EAAMM,WACL,cAAGT,UAAWC,EAAAA,cAAd,SAAoCE,EAAMM,aAE1C,cAAGT,UAAWC,EAAAA,cAAd,wBAtBgCE,EAAMO,QA2B/C,IACFpB,IAAW,SAACqB,EAAA,EAAD,MAGjB,C","sources":["API/movie.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '260fc58ea6000c815fd7f586919a4c2b';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n  try {\n    const fetchUrl = `${BASE_URL}${TRENDING}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data.results;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchMovieDetails(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const fetchUrl = `${BASE_URL}${SEARCH}?api_key=${API_KEY}&query=${query}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nconst movieAPI = {\n  fetchTrending,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n  searchMovies,\n};\n\nexport default movieAPI;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castMember\":\"Cast_castMember__RY3Nk\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\",\"characterName\":\"Cast_characterName__R1bgC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport movieAPI from 'API/movie';\nimport style from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    setLoading(true);\n    movieAPI\n      .fetchCast(movieId)\n      .then(result => setCast(result.cast))\n      .catch(error => toast.error(`${error.message}`))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <ul className={style.castList}>\n      {cast &&\n        cast.map(actor => {\n          return (\n            <li className={style.castMember} key={actor.cast_id}>\n              {actor.profile_path ? (\n                <img\n                  src={`${BASE_IMG_URL}${actor.profile_path}`}\n                  alt=\"\"\n                  width=\"180\"\n                  className={style.photo}\n                />\n              ) : (\n                <img\n                  src=\"https://dummyimage.com/500x750/C4F5C8/083004.jpg&text=No+Photo\"\n                  alt=\"\"\n                  width=\"180\"\n                  className={style.photo}\n                />\n              )}\n              <div>\n                <p className={style.name}>{actor.name}</p>\n                <p className={style.character}>Character:</p>\n                {actor.character ? (\n                  <p className={style.characterName}>{actor.character}</p>\n                ) : (\n                  <p className={style.characterName}>cameo</p>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      {loading && <Loader />}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","results","Promise","reject","Error","fetchMovieDetails","id","fetchCast","fetchReviews","searchMovies","query","movieAPI","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","then","result","catch","error","toast","message","finally","className","style","map","actor","profile_path","src","alt","width","name","character","cast_id","Loader"],"sourceRoot":""}