{"version":3,"file":"static/js/881.d5e9d03e.chunk.js","mappings":"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","sources":["API/movie.js","webpack://goit-react-hw-05-movies/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '260fc58ea6000c815fd7f586919a4c2b';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n  try {\n    const fetchUrl = `${BASE_URL}${TRENDING}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data.results;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchMovieDetails(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchCast(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const fetchUrl = `${BASE_URL}${SEARCH}?api_key=${API_KEY}&query=${query}`;\n    const response = await axios.get(fetchUrl);\n\n    if (response) {\n      return response.data;\n    }\n\n    return Promise.reject(new Error('Oops! Something went wrong...'));\n  } catch (error) {\n    return error;\n  }\n}\n\nconst movieAPI = {\n  fetchTrending,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n  searchMovies,\n};\n\nexport default movieAPI;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ListItem_item__3+qKK\",\"icon\":\"ListItem_icon__dP-8S\",\"link\":\"ListItem_link__twHxh\"};","import { Link, useLocation } from 'react-router-dom';\nimport { BiStar } from 'react-icons/bi';\nimport style from './ListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ListItem = ({ name, id }) => {\n  const location = useLocation();\n\n  return (\n    <li className={style.item}>\n      <BiStar className={style.icon} />\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={style.link}\n      >\n        {name}\n      </Link>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__J4-xw\",\"input\":\"Movies_input__KrUqs\",\"buttonIcon\":\"Movies_buttonIcon__GIQHA\",\"button\":\"Movies_button__GcIka\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { BsSearch } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport movieAPI from 'API/movie';\nimport ListItem from 'components/ListItem/ListItem';\nimport style from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleInputChange = event => {\n    const inputValue = event.currentTarget.value.toLowerCase();\n    setValue(inputValue);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      toast.error('Enter search query.');\n      reset();\n      return;\n    }\n    changeQuery(value);\n    reset();\n  };\n\n  const changeQuery = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setLoading(true);\n    movieAPI\n      .searchMovies(query)\n      .then(result => {\n        if (result.results.length > 0) {\n          setMovies(result.results);\n        } else {\n          setMovies(null);\n          toast.warning('No matches found.');\n        }\n      })\n      .catch(error => toast.error(`${error.message}`))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [query]);\n\n  useEffect(() => {\n    if (location.pathname === '/movies') {\n      setMovies(null);\n    }\n  }, [location]);\n\n  return (\n    <>\n      {location.pathname === '/movies' && (\n        <>\n          <form className={style.searchForm} onSubmit={handleFormSubmit}>\n            <input\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"Enter movie name\"\n              className={style.input}\n              onChange={handleInputChange}\n              value={value}\n            />\n            <button type=\"submit\" className={style.button}>\n              <BsSearch className={style.buttonIcon} />\n              Search\n            </button>\n          </form>\n          <ul className={style.trending__list}>\n            {movies &&\n              movies.map(movie => {\n                return (\n                  <ListItem key={movie.id} name={movie.title} id={movie.id} />\n                );\n              })}\n            {loading && <Loader />}\n          </ul>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","results","Promise","reject","Error","fetchMovieDetails","id","fetchCast","fetchReviews","searchMovies","query","movieAPI","name","location","useLocation","className","style","to","state","from","useState","value","setValue","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","changeQuery","reset","useEffect","then","result","length","toast","catch","error","message","finally","pathname","onSubmit","event","preventDefault","trim","type","placeholder","onChange","inputValue","currentTarget","toLowerCase","map","movie","ListItem","title","Loader","Suspense","fallback"],"sourceRoot":""}